version: '3.8'

services:
  app:
    build:
      context: .
      target: production
    container_name: sachs-admin-app
    restart: unless-stopped
    ports:
      - "8000:80"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=sachs_admin
      - DB_USERNAME=sachs_admin
      - DB_PASSWORD=sachs_admin_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    depends_on:
      - db
      - redis
    networks:
      - sachs-admin-network

  db:
    image: mysql:8.0
    container_name: sachs-admin-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: sachs_admin
      MYSQL_USER: sachs_admin
      MYSQL_PASSWORD: sachs_admin_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - sachs-admin-network

  redis:
    image: redis:7-alpine
    container_name: sachs-admin-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sachs-admin-network

  nginx:
    image: nginx:alpine
    container_name: sachs-admin-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./public:/var/www/html/public
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - sachs-admin-network

volumes:
  mysql_data:
  redis_data:


networks:
  sachs-admin-network:
    driver: bridge
